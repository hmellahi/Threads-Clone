// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection TODO
}

model User {
  id                String        @id @default(uuid())
  username          String        @unique
  name              String
  image             String?
  bio               String?
  threads           Thread[]
  communities       Community[]   @relation("MemberOf")
  CreatedCommunites Community[]   @relation("CreatedCommunity")
  onboarded         Boolean       @default(false)
  likes             ThreadLikes[]

  followeBy User[] @relation("UserFollows")
  following User[] @relation("UserFollows")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Thread {
  id   String @id @default(uuid())
  text String

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  community   Community? @relation(fields: [communityId], references: [id])
  communityId String?

  parentId  String?
  parent    Thread?  @relation(name: "ParentChildrens", fields: [parentId], references: [id])
  childrens Thread[] @relation("ParentChildrens")

  likes ThreadLikes[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Community {
  id        String   @id @default(uuid())
  name      String
  image     String?
  slug      String
  bio       String?
  Creator   User     @relation(fields: [createdBy], references: [id], name: "CreatedCommunity")
  createdBy String
  threads   Thread[]
  members   User[]   @relation("MemberOf")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model ThreadLikes {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], map: "liker")
  userId    String
  thread    Thread   @relation(fields: [threadId], references: [id])
  threadId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
