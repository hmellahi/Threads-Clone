
> twitter@0.1.0 dev
> next dev

- info Loaded env from /Users/mac/Desktop/projects/twitter/.env.local
- info Loaded env from /Users/mac/Desktop/projects/twitter/.env
- [32mready[39m started server on [::]:3000, url: http://localhost:3000
- [35mevent[39m compiled client and server successfully in 154 ms (20 modules)
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 98 ms (20 modules)
- [36minfo[39m Loaded env from /Users/mac/Desktop/projects/twitter/.env.local
- [36minfo[39m Loaded env from /Users/mac/Desktop/projects/twitter/.env
- [36minfo[39m Loaded env from /Users/mac/Desktop/projects/twitter/.env.local
- [36minfo[39m Loaded env from /Users/mac/Desktop/projects/twitter/.env
- [36mwait[39m compiling /_error (client and server)...
- [36mwait[39m compiling /middleware (client and server)...
- [35mevent[39m compiled client and server successfully in 657 ms (419 modules)
- [36mwait[39m compiling /(root)/page (client and server)...
- [35mevent[39m compiled client and server successfully in 1697 ms (1268 modules)
- [36mwait[39m compiling...
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [35mevent[39m compiled client and server successfully in 987 ms (1254 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling /api/uploadthing/route (client and server)...
- [35mevent[39m compiled successfully in 179 ms (716 modules)
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 171 ms (1287 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 317 ms (1301 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 204 ms (1301 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 212 ms (1301 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 167 ms (1294 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 426 ms (1294 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 248 ms (1294 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 186 ms (1294 modules)
- [36mwait[39m compiling...
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [35mevent[39m compiled client and server successfully in 205 ms (1294 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 175 ms (1294 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 252 ms (1280 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 135 ms (1280 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 123 ms (1280 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 88 ms (1280 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 155 ms (1280 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
- [36mwait[39m compiling /(root)/thread/[id]/page (client and server)...
- [35mevent[39m compiled client and server successfully in 272 ms (1289 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  thread: {
    id: '248c4704-d7ec-4c43-a019-aeec8bf1356e',
    text: 'dsa',
    createdAt: 2023-09-18T00:09:15.645Z,
    author: {
      id: 'user_2UcEXkMmpicOvQCTkOsO0ocOhLD',
      username: 'hmellahi',
      image: 'https://uploadthing.com/f/1ce9c9b8-31c2-4340-9423-e33c26283525-pyifzn.jpg'
    },
    images: [],
    childrens: [],
    likes: [],
    _count: { likes: 0, childrens: 0 }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  thread: {
    id: '78241ac8-6c4b-498d-a051-61519040adfc',
    text: 'dsa',
    createdAt: 2023-09-18T00:06:38.493Z,
    author: {
      id: 'user_2UcEXkMmpicOvQCTkOsO0ocOhLD',
      username: 'hmellahi',
      image: 'https://uploadthing.com/f/1ce9c9b8-31c2-4340-9423-e33c26283525-pyifzn.jpg'
    },
    images: [],
    childrens: [],
    likes: [],
    _count: { likes: 0, childrens: 0 }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 261 ms (1289 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 112 ms (1289 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 141 ms (1289 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 154 ms (1289 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
- [36mwait[39m compiling...
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 579 ms (1289 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
PrismaClientKnownRequestError: 
Invalid `prisma.threadLikes.create()` invocation:


Foreign key constraint failed on the field: `ThreadLikes_threadId_fkey (index)`
    at vn.handleRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6730)
    at vn.handleAndLogRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6119)
    at vn.request (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:5839)
    at async l (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:128:9763)
    at async likeThread (webpack-internal:///(actionBrowser)/./lib/actions/thread.actions.ts:209:9)
    at async /Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/action-handler.js:284:35
    at async handleAction (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/action-handler.js:186:13)
    at async wrappedRender (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/app-render.js:1052:37)
    at async doRender (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/base-server.js:1153:26)
    at async cacheEntry.responseCache.get.incrementalCache.incrementalCache (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/base-server.js:1300:28)
    at async /Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/response-cache/index.js:99:36 {
  code: 'P2003',
  clientVersion: '5.2.0',
  meta: { field_name: 'ThreadLikes_threadId_fkey (index)' }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  thread: {
    id: 'b50fb78f-e18a-4cf5-acc6-3e3c41f67833',
    text: 'dsa',
    createdAt: 2023-09-18T00:13:36.654Z,
    author: {
      id: 'user_2UcEXkMmpicOvQCTkOsO0ocOhLD',
      username: 'hmellahi',
      image: 'https://uploadthing.com/f/1ce9c9b8-31c2-4340-9423-e33c26283525-pyifzn.jpg'
    },
    images: [],
    childrens: [],
    likes: [],
    _count: { likes: 0, childrens: 0 }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  thread: {
    id: 'b50fb78f-e18a-4cf5-acc6-3e3c41f67833',
    text: 'dsa',
    createdAt: 2023-09-18T00:13:36.654Z,
    author: {
      id: 'user_2UcEXkMmpicOvQCTkOsO0ocOhLD',
      username: 'hmellahi',
      image: 'https://uploadthing.com/f/1ce9c9b8-31c2-4340-9423-e33c26283525-pyifzn.jpg'
    },
    images: [],
    childrens: [],
    likes: [],
    _count: { likes: 0, childrens: 0 }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  thread: {
    id: 'b50fb78f-e18a-4cf5-acc6-3e3c41f67833',
    text: 'dsa',
    createdAt: 2023-09-18T00:13:36.654Z,
    author: {
      id: 'user_2UcEXkMmpicOvQCTkOsO0ocOhLD',
      username: 'hmellahi',
      image: 'https://uploadthing.com/f/1ce9c9b8-31c2-4340-9423-e33c26283525-pyifzn.jpg'
    },
    images: [],
    childrens: [],
    likes: [ [Object] ],
    _count: { likes: 1, childrens: 0 }
  }
}
{
  thread: {
    id: 'b50fb78f-e18a-4cf5-acc6-3e3c41f67833',
    text: 'dsa',
    createdAt: 2023-09-18T00:13:36.654Z,
    author: {
      id: 'user_2UcEXkMmpicOvQCTkOsO0ocOhLD',
      username: 'hmellahi',
      image: 'https://uploadthing.com/f/1ce9c9b8-31c2-4340-9423-e33c26283525-pyifzn.jpg'
    },
    images: [],
    childrens: [],
    likes: [ [Object] ],
    _count: { likes: 1, childrens: 0 }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
PrismaClientKnownRequestError: 
Invalid `prisma.threadLikes.create()` invocation:


Foreign key constraint failed on the field: `ThreadLikes_threadId_fkey (index)`
    at vn.handleRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6730)
    at vn.handleAndLogRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6119)
    at vn.request (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:5839)
    at async l (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:128:9763)
    at async likeThread (webpack-internal:///(actionBrowser)/./lib/actions/thread.actions.ts:209:9)
    at async /Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/action-handler.js:284:35
    at async handleAction (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/action-handler.js:186:13)
    at async wrappedRender (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/app-render.js:1052:37)
    at async doRender (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/base-server.js:1153:26)
    at async cacheEntry.responseCache.get.incrementalCache.incrementalCache (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/base-server.js:1300:28)
    at async /Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/response-cache/index.js:99:36 {
  code: 'P2003',
  clientVersion: '5.2.0',
  meta: { field_name: 'ThreadLikes_threadId_fkey (index)' }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
PrismaClientValidationError: 
Invalid `prisma.threadLikes.delete()` invocation:

{
  where: {
    id: undefined,
?   AND?: ThreadLikesWhereInput | ThreadLikesWhereInput[],
?   OR?: ThreadLikesWhereInput[],
?   NOT?: ThreadLikesWhereInput | ThreadLikesWhereInput[],
?   userId?: StringFilter | String,
?   threadId?: StringFilter | String,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   user?: UserRelationFilter | UserWhereInput,
?   thread?: ThreadRelationFilter | ThreadWhereInput
  }
}

Argument `where` of type ThreadLikesWhereUniqueInput needs at least one of `id` arguments. Available options are listed in green.
    at xn (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:116:5852)
    at vn.handleRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6429)
    at vn.handleAndLogRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6119)
    at vn.request (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:5839)
    at async l (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:128:9763)
    at async unLikeThread (webpack-internal:///(actionBrowser)/./lib/actions/thread.actions.ts:220:9)
    at async /Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/action-handler.js:284:35
    at async handleAction (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/action-handler.js:186:13)
    at async wrappedRender (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/app-render.js:1052:37)
    at async doRender (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/base-server.js:1153:26)
    at async cacheEntry.responseCache.get.incrementalCache.incrementalCache (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/base-server.js:1300:28)
    at async /Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/response-cache/index.js:99:36 {
  clientVersion: '5.2.0'
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
PrismaClientKnownRequestError: 
Invalid `prisma.threadLikes.create()` invocation:


Foreign key constraint failed on the field: `ThreadLikes_threadId_fkey (index)`
    at vn.handleRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6730)
    at vn.handleAndLogRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6119)
    at vn.request (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:5839)
    at async l (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:128:9763)
    at async likeThread (webpack-internal:///(actionBrowser)/./lib/actions/thread.actions.ts:209:9)
    at async /Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/action-handler.js:284:35
    at async handleAction (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/action-handler.js:186:13)
    at async wrappedRender (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/app-render/app-render.js:1052:37)
    at async doRender (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/base-server.js:1153:26)
    at async cacheEntry.responseCache.get.incrementalCache.incrementalCache (/Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/base-server.js:1300:28)
    at async /Users/mac/Desktop/projects/twitter/node_modules/next/dist/server/response-cache/index.js:99:36 {
  code: 'P2003',
  clientVersion: '5.2.0',
  meta: { field_name: 'ThreadLikes_threadId_fkey (index)' }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{ likeRecord: null }
- [36mwait[39m compiling...
- [35mevent[39m compiled client and server successfully in 431 ms (1303 modules)
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{ likeRecord: null }
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[UT] UploadThing dev server is now running!
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
PrismaClientKnownRequestError: 
Invalid `prisma.user.findFirst()` invocation:


Can't reach database server at `104.248.38.199`:`7779`

Please make sure your database server is running at `104.248.38.199`:`7779`.
    at vn.handleRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6730)
    at vn.handleAndLogRequestError (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:6119)
    at vn.request (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:123:5839)
    at async l (/Users/mac/Desktop/projects/twitter/node_modules/@prisma/client/runtime/library.js:128:9763)
    at async fetchUser (webpack-internal:///(rsc)/./lib/actions/user.actions.ts:70:20)
    at async AuthLayout (webpack-internal:///(rsc)/./app/(root)/layout.tsx:32:23) {
  code: 'P1001',
  clientVersion: '5.2.0',
  meta: { database_host: '104.248.38.199', database_port: 7779 }
}
{
  clerk: {
    allowlistIdentifiers: AllowlistIdentifierAPI { request: [AsyncFunction (anonymous)] },
    clients: ClientAPI { request: [AsyncFunction (anonymous)] },
    emailAddresses: EmailAddressAPI { request: [AsyncFunction (anonymous)] },
    emails: EmailAPI { request: [AsyncFunction (anonymous)] },
    interstitial: InterstitialAPI { request: [AsyncFunction (anonymous)] },
    invitations: InvitationAPI { request: [AsyncFunction (anonymous)] },
    organizations: OrganizationAPI { request: [AsyncFunction (anonymous)] },
    phoneNumbers: PhoneNumberAPI { request: [AsyncFunction (anonymous)] },
    redirectUrls: RedirectUrlAPI { request: [AsyncFunction (anonymous)] },
    sessions: SessionAPI { request: [AsyncFunction (anonymous)] },
    signInTokens: SignInTokenAPI { request: [AsyncFunction (anonymous)] },
    smsMessages: SMSMessageAPI { request: [AsyncFunction (anonymous)] },
    users: UserAPI { request: [AsyncFunction (anonymous)] },
    domains: DomainAPI { request: [AsyncFunction (anonymous)] },
    authenticateRequest: [Function: authenticateRequest2],
    localInterstitial: [Function: localInterstitial],
    remotePublicInterstitial: [Function: remotePublicInterstitial],
    remotePrivateInterstitial: [Function: remotePrivateInterstitial],
    remotePublicInterstitialUrl: [Function: buildPublicInterstitialUrl],
    debugRequestState: [Function: debugRequestState],
    __unstable_options: { secretKey: 'sk_test_SeZNOqJjtgDRiehYhaz3ibRhvV7W8dqXWOU3Xoe8Fg' },
    expressWithAuth: [Function (anonymous)],
    expressRequireAuth: [Function (anonymous)],
    verifyToken: [Function: verifyToken],
    base: { verifySessionToken: [Function: verifySessionToken] }
  }
}
[?25h
